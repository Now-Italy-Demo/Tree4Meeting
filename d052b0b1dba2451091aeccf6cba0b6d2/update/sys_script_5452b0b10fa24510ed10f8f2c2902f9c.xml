<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_tree4meeting_event</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_tree4meeting_event">date_fromVALCHANGES^ORdate_toVALCHANGES^EQ<item endquery="false" field="date_from" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="date_to" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Date Validations</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var startDate = new GlideDateTime(current.date_from).getNumericValue();
	var endDate = new GlideDateTime(current.date_to).getNumericValue();
    var startMsg = gs.getMessage('start date cannot be past');
    var endMsg = gs.getMessage('End date cannot be prior to the current date or start date');
    if (startDate < new GlideDateTime().getNumericValue()) {
        gs.addErrorMessage(startMsg);
        current.setAbortAction(true);
    } else if (startDate > endDate) {
        gs.addErrorMessage(endMsg);
        current.setAbortAction(true);
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-30 16:29:35</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>5452b0b10fa24510ed10f8f2c2902f9c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Date Validations</sys_name>
        <sys_overrides/>
        <sys_package display_value="Tree4Meeting" source="x_snc_tree4meeting">d052b0b1dba2451091aeccf6cba0b6d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Tree4Meeting">d052b0b1dba2451091aeccf6cba0b6d2</sys_scope>
        <sys_update_name>sys_script_5452b0b10fa24510ed10f8f2c2902f9c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-30 16:29:35</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=5452b0b10fa24510ed10f8f2c2902f9c"/>
</record_update>
